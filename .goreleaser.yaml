version: 2
project_name: harbor-satellite

before:
  hooks:
    - go mod tidy

builds:
- main: ./cmd/main.go
  env:
    - CGO_ENABLED=0
  ldflags:
    - -w -s -X github.com/container-registry/harbor-satellite/internal/version.GitCommit={{.FullCommit}}
    - -X github.com/container-registry/harbor-satellite/internal/version.Version={{.Tag}}
  goos:
    - linux
    - darwin
  goarch:
    - amd64
    - arm64
    - ppc64le
    - s390x
    - "386"
    - loong64
    - mips64
    - mips64le
    - mips
    - mipsle
    - riscv64
  ignore:
    - goos: darwin
      goarch: ppc64le
    - goos: darwin
      goarch: s390x
    - goos: darwin
      goarch: "386"
    - goos: darwin
      goarch: loong64
    - goos: darwin
      goarch: mips64
    - goos: darwin
      goarch: mips64le
    - goos: darwin
      goarch: mips
    - goos: darwin
      goarch: mipsle
    - goos: darwin
      goarch: riscv64
  mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
nfpms:
  -
    homepage: https://github.com/container-registry/harbor-satellite
    maintainer: Harbor Community
    description: |-
      Harbor Satellite is a lightweight, secure, and easy-to-use container registry that can be deployed in a few minutes on remote edge locations.
    formats:
      - rpm
      - deb
      - apk
      - archlinux

sboms:
  - artifacts: archive

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-next"

release:
  name_template: "harbor-satellite {{.Tag}}"
  draft: true                 # Set to false to ensure that releases are published, not kept as drafts
  prerelease: auto            # Auto-detect prereleases based on tag
  replace_existing_draft: true
  replace_existing_artifacts: true
  disable: false              # Ensure release publishing is enabled
  github:
    owner: container-registry       # Your GitHub repository owner
    name: harbor-satellite          # Your GitHub repository name
changelog:
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "merge conflict"
  groups:
    - title: "Dependency updates"
      regexp: '^.*?(.+)\(deps\)!?:.+$'
      order: 300
    - title: "New Features"
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?docs?(\(.+\))??!?:.+$
      order: 400
    - title: "Build process updates"
      regexp: ^.*?(build|ci)(\(.+\))??!?:.+$
      order: 400
    - title: "Other work"
      order: 9999
